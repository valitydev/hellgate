%% -*- mode: erlang -*-
[
    {kernel, [
        {logger_level, info},
        {logger, [
            {handler, default, logger_std_h, #{
                config => #{
                    type => standard_io,
                    sync_mode_qlen => 20
                },
                formatter => {logger_logstash_formatter, #{
                    log_level_map => #{
                        emergency => 'ERROR',
                        alert => 'ERROR',
                        critical => 'ERROR',
                        error => 'ERROR',
                        warning => 'WARN',
                        notice => 'INFO',
                        info => 'INFO',
                        debug => 'DEBUG'
                    }
                }}
            }}
        ]}
    ]},

    {scoper, [
        {storage, scoper_storage_logger}
    ]},

    {party_management, [
        {machinery_backend, progressor},
        {scoper_event_handler_options, #{
            event_handler_opts => #{
                formatter_opts => #{
                    max_length => 1000
                }
            }
        }},
        {services, #{
            automaton => "http://machinegun-ha:8022/v1/automaton",
            accounter => "http://shumway:8022/accounter"
        }},
        {cache_options, #{ %% see `pm_party_cache:cache_options/0`
            memory => 209715200,  % 200Mb, cache memory quota in bytes
            ttl => 3600,
            size => 3000
        }},
        {health_check, #{
            memory  => {erl_health, cg_memory, [70]},
            dmt_client => {dmt_client, health_check, []}
        }}
    ]},

    {epg_connector, [
        {databases, #{
            default_db => #{
                host => "party-management-db",
                port => 5432,
                database => "progressor_db",
                username => "progressor",
                password => "progressor"
            }
        }},
        {pools, #{
            default_pool => #{
                database => default_db,
                size => 30
            }
        }}
    ]},

    {progressor, [
        {call_wait_timeout, 20},
        {defaults, #{
            storage => #{
                client => prg_pg_backend,
                options => #{
                    pool => default_pool
                }
            },
            retry_policy => #{
                initial_timeout => 5,
                backoff_coefficient => 1.0,
                %% seconds
                max_timeout => 180,
                max_attempts => 3,
                non_retryable_errors => []
            },
            task_scan_timeout => 1,
            worker_pool_size => 100,
            process_step_timeout => 30
        }},
        {namespaces, #{
            'party' => #{
                processor => #{
                    client => machinery_prg_backend,
                    options => #{
                        namespace => 'party',
                        handler => {pm_party_machine, #{}},
                        schema => party_management_machinery_schema
                    }
                }
            }
        }}
    ]},

    {dmt_client, [
        {cache_update_interval, 5000}, % milliseconds
        {cache_server_call_timeout, 30000}, % milliseconds
        {max_cache_size, #{
            elements => 20,
            memory => 52428800 % 50Mb
        }},
        {woody_event_handlers, [
            {scoper_woody_event_handler, #{
                event_handler_opts => #{
                    formatter_opts => #{
                        max_length => 1000
                    }
                }
            }}
        ]},
        {service_urls, #{
            'AuthorManagement' => <<"http://dmt:8022/v1/domain/author">>,
            'Repository' => <<"http://dmt:8022/v1/domain/repository">>,
            'RepositoryClient' => <<"http://dmt:8022/v1/domain/repository_client">>
        }}
    ]},

    {snowflake, [{machine_id, 1}]},

    {prometheus, [
        {collectors, [default]}
    ]},

    {hackney, [
        {mod_metrics, woody_hackney_prometheus}
    ]}
].
