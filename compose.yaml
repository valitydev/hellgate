services:
  testrunner:
    image: $DEV_IMAGE_TAG
    build:
      dockerfile: Dockerfile.dev
      context: .
      args:
        OTP_VERSION: $OTP_VERSION
        THRIFT_VERSION: $THRIFT_VERSION
    volumes:
      - .:$PWD
    hostname: hellgate
    depends_on:
      db:
        condition: service_healthy
      dmt:
        condition: service_healthy
      party-management:
        condition: service_healthy
      limiter:
        condition: service_healthy
      shumway:
        condition: service_started
      bender:
        condition: service_healthy
    working_dir: $PWD
    command: /sbin/init

  dmt:
    image: ghcr.io/valitydev/dominant-v2:sha-ba60639-epic-fixes_for_client
    command: /opt/dmt/bin/dmt foreground
    healthcheck:
      test: "/opt/dmt/bin/dmt ping"
      interval: 5s
      timeout: 3s
      retries: 12
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./test/dmt/sys.config:/opt/dmt/releases/0.1/sys.config

  machinegun:
    image: ghcr.io/valitydev/mg2:sha-436f723
    command: /opt/machinegun/bin/machinegun foreground
    volumes:
      - ./test/machinegun/config.yaml:/opt/machinegun/etc/config.yaml
      - ./test/machinegun/cookie:/opt/machinegun/etc/cookie
    healthcheck:
      test: "/opt/machinegun/bin/machinegun ping"
      interval: 5s
      timeout: 1s
      retries: 20

  bender:
    image: ghcr.io/valitydev/bender:sha-a3b227f
    command: /opt/bender/bin/bender foreground
    depends_on:
      machinegun:
        condition: service_healthy
    healthcheck:
      test: "/opt/bender/bin/bender ping"
      interval: 10s
      timeout: 5s
      retries: 10

  limiter:
    image: ghcr.io/valitydev/limiter:sha-2150901-epic-dmt-client-v2
    command: /opt/limiter/bin/limiter foreground
    depends_on:
      machinegun:
        condition: service_healthy
      shumway:
        condition: service_started
      liminator:
        condition: service_healthy
    healthcheck:
      test: "/opt/limiter/bin/limiter ping"
      interval: 5s
      timeout: 1s
      retries: 20

  shumway:
    image: ghcr.io/valitydev/shumway:sha-658587c
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
    entrypoint:
      - java
      - -Xmx512m
      - -jar
      - /opt/shumway/shumway.jar
      - --spring.datasource.url=jdbc:postgresql://db:5432/shumway
      - --spring.datasource.username=shumway
      - --spring.datasource.password=postgres
      - --management.endpoint.metrics.enabled=false
      - --management.endpoint.prometheus.enabled=false
    healthcheck:
      disable: true

  liminator:
    image: ghcr.io/valitydev/liminator:sha-63b164d
    restart: unless-stopped
    entrypoint:
      - java
      - -Xmx512m
      - -jar
      - /opt/liminator/liminator.jar
      - --spring.datasource.url=jdbc:postgresql://db:5432/liminator
      - --spring.datasource.username=liminator
      - --spring.datasource.password=postgres
      - --service.skipExistedHoldOps=false
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: "curl http://localhost:8022/actuator/health"
      interval: 5s
      timeout: 1s
      retries: 20

  party-management:
    image: ghcr.io/valitydev/party-management:sha-1455452-epic-dmt-client-v2
    command: /opt/party-management/bin/party-management foreground
    depends_on:
      db:
        condition: service_healthy
      dmt:
        condition: service_started
      shumway:
        condition: service_started
    healthcheck:
      test: "/opt/party-management/bin/party-management ping"
      interval: 10s
      timeout: 5s
      retries: 10
    volumes:
      - ./test/party-management/sys.config:/opt/party-management/releases/0.1/sys.config

  db:
    image: postgres:15-bookworm
    command: -c 'max_connections=1000'
    environment:
      POSTGRES_MULTIPLE_DATABASES: "hellgate,dmt,party_management,shumway,liminator"
      POSTGRES_PASSWORD: "postgres"
    volumes:
      - ./test/postgres/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hellgate"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
